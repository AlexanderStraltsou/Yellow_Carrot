// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Yellow_Carrot.Data;

#nullable disable

namespace YellowCarrot.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20221220202426_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RecipeTags", b =>
                {
                    b.Property<int>("RecipesRecipeId")
                        .HasColumnType("int");

                    b.Property<int>("TagsTagId")
                        .HasColumnType("int");

                    b.HasKey("RecipesRecipeId", "TagsTagId");

                    b.HasIndex("TagsTagId");

                    b.ToTable("RecipeTags");
                });

            modelBuilder.Entity("Yellow_Carrot.Models.Ingredient", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("IngredientId")
                        .HasColumnType("int");

                    b.Property<string>("Quantity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.HasKey("Name");

                    b.HasIndex("RecipeId");

                    b.ToTable("Ingredients");

                    b.HasData(
                        new
                        {
                            Name = "Pasta Rigatoni",
                            IngredientId = 1,
                            Quantity = "200 gr",
                            RecipeId = 1
                        },
                        new
                        {
                            Name = "Pesto",
                            IngredientId = 2,
                            Quantity = "70 gr",
                            RecipeId = 1
                        },
                        new
                        {
                            Name = "Parmegano Cheese",
                            IngredientId = 3,
                            Quantity = "100 gr",
                            RecipeId = 1
                        },
                        new
                        {
                            Name = "Pizza Dough",
                            IngredientId = 4,
                            Quantity = "1 kg",
                            RecipeId = 2
                        },
                        new
                        {
                            Name = "Mozarella Cheese",
                            IngredientId = 5,
                            Quantity = "100",
                            RecipeId = 2
                        },
                        new
                        {
                            Name = "Red Paprika",
                            IngredientId = 6,
                            Quantity = "50 gr",
                            RecipeId = 2
                        },
                        new
                        {
                            Name = "Salami",
                            IngredientId = 7,
                            Quantity = "100 gr",
                            RecipeId = 2
                        },
                        new
                        {
                            Name = "Tomato Sauce",
                            IngredientId = 8,
                            Quantity = "200 gr",
                            RecipeId = 2
                        },
                        new
                        {
                            Name = "Curry",
                            IngredientId = 9,
                            Quantity = "10 gr",
                            RecipeId = 3
                        },
                        new
                        {
                            Name = "Parma",
                            IngredientId = 10,
                            Quantity = "50 gr",
                            RecipeId = 3
                        },
                        new
                        {
                            Name = "Pizza Bottom",
                            IngredientId = 11,
                            Quantity = "2 pcs",
                            RecipeId = 3
                        },
                        new
                        {
                            Name = "Ananas",
                            IngredientId = 12,
                            Quantity = "10 slices",
                            RecipeId = 3
                        });
                });

            modelBuilder.Entity("Yellow_Carrot.Models.Recipe", b =>
                {
                    b.Property<int>("RecipeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecipeId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TagId")
                        .HasColumnType("int");

                    b.HasKey("RecipeId");

                    b.ToTable("Recipes");

                    b.HasData(
                        new
                        {
                            RecipeId = 1,
                            Name = "Pasta Pesto"
                        },
                        new
                        {
                            RecipeId = 2,
                            Name = "Pizza Salami",
                            TagId = 5
                        },
                        new
                        {
                            RecipeId = 3,
                            Name = "Pizza Hawaii",
                            TagId = 6
                        });
                });

            modelBuilder.Entity("Yellow_Carrot.Models.Tags", b =>
                {
                    b.Property<int?>("TagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("TagId"));

                    b.Property<string>("TagName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TagId");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            TagId = 1,
                            TagName = "Vegetarian"
                        },
                        new
                        {
                            TagId = 2,
                            TagName = "Vegan"
                        },
                        new
                        {
                            TagId = 3,
                            TagName = "Dairy"
                        },
                        new
                        {
                            TagId = 4,
                            TagName = "Sugar Free"
                        },
                        new
                        {
                            TagId = 5,
                            TagName = "Gluten Free"
                        },
                        new
                        {
                            TagId = 6,
                            TagName = "Lactose Free"
                        });
                });

            modelBuilder.Entity("RecipeTags", b =>
                {
                    b.HasOne("Yellow_Carrot.Models.Recipe", null)
                        .WithMany()
                        .HasForeignKey("RecipesRecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Yellow_Carrot.Models.Tags", null)
                        .WithMany()
                        .HasForeignKey("TagsTagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Yellow_Carrot.Models.Ingredient", b =>
                {
                    b.HasOne("Yellow_Carrot.Models.Recipe", "Recipe")
                        .WithMany("Ingredients")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("Yellow_Carrot.Models.Recipe", b =>
                {
                    b.Navigation("Ingredients");
                });
#pragma warning restore 612, 618
        }
    }
}
